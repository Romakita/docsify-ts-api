{"version":3,"file":"mergeOperation.js","sourceRoot":"","sources":["../../src/utils/mergeOperation.ts"],"names":[],"mappings":";;AAAA,yDAAoD;AACpD,mEAA8D;AAE9D,SAAgB,cAAc,CAAC,GAAQ,EAAE,SAAc,EAAE,EAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAM;IACpH,OAAO,6CAAqB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,EAAE,EAAE;;QAC9E,UAAU,GAAG,mCAAgB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QACrD,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;QAE3B,MAAM,aAAa,GAAG,OAAA,SAAS,CAAC,IAAI,0CAAE,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QAE9E,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;YAChB,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;YAClB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE;gBACtB,WAAW,EAAE,SAAS,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,CAAC;gBACvD,GAAG,SAAS;gBACZ,IAAI,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,EAAM,EAAE,EAAE,CAAC,IAAI,CAAC;gBAC9C,UAAU;aACX;SACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;QAE5B,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,GAAG,CAAC,CAAC;AACV,CAAC;AArBD,wCAqBC","sourcesContent":["import {concatParameters} from \"./concatParameters\";\nimport {getJsonPathParameters} from \"./getJsonPathParameters\";\n\nexport function mergeOperation(obj: any, operation: any, {rootPath, operationId, defaultTags, tags, path, method}: any) {\n  return getJsonPathParameters(rootPath, path).reduce((obj, {path, parameters}) => {\n    parameters = concatParameters(parameters, operation);\n    path = !!path ? path : \"/\";\n\n    const operationTags = operation.tags?.length ? operation.tags : [defaultTags];\n\n    obj.paths[path] = {\n      ...obj.paths[path],\n      [method.toLowerCase()]: {\n        operationId: operation.operationId || operationId(path),\n        ...operation,\n        tags: operationTags.map(({name}: any) => name),\n        parameters\n      }\n    };\n\n    tags.push(...operationTags);\n\n    return obj;\n  }, obj);\n}\n"]}