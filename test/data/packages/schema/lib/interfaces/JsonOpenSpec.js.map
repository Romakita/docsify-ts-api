{"version":3,"file":"JsonOpenSpec.js","sourceRoot":"","sources":["../../src/interfaces/JsonOpenSpec.ts"],"names":[],"mappings":"","sourcesContent":["import {JsonSchema} from \"../domain\";\n\nexport interface JsonHeader extends JsonParameterBase {}\n\nexport interface JsonHeaders {\n  [key: string]: number | string | (JsonHeader & {value?: string | number});\n}\n\nexport interface JsonExternalDocumentation {\n  description?: string;\n  url: string;\n}\n\nexport interface JsonSecurityRequirement {\n  [key: string]: string[];\n}\n\nexport interface JsonParameterBase {\n  description?: string;\n  required?: boolean;\n  deprecated?: boolean;\n  allowEmptyValue?: boolean;\n  style?: string;\n  explode?: boolean;\n  allowReserved?: boolean;\n  schema?: JsonSchema;\n  example?: any;\n  examples?: {\n    [name: string]: JsonExample;\n  };\n  content?: {\n    [media: string]: JsonMediaType;\n  };\n}\n\nexport interface JsonExample {\n  summary?: string;\n  description?: string;\n  value?: any;\n  externalValue?: string;\n}\n\nexport interface JsonEncoding {\n  contentType?: string;\n  headers?: {\n    [header: string]: JsonHeader;\n  };\n  style?: string;\n  explode?: boolean;\n  allowReserved?: boolean;\n}\n\nexport interface JsonMediaType {\n  schema?: JsonSchema;\n  example?: any;\n  examples?: {\n    [media: string]: JsonExample;\n  };\n  encoding?: {[media: string]: JsonEncoding};\n}\n\nexport interface JsonTag {\n  name: string;\n  description?: string;\n  externalDocs?: JsonExternalDocumentation;\n}\n"]}