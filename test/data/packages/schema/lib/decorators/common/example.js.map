{"version":3,"file":"example.js","sourceRoot":"","sources":["../../../src/decorators/common/example.ts"],"names":[],"mappings":";;AAAA,qCAAqH;AAErH,iDAA4C;AAmB5C,SAAgB,OAAO,CAAC,IAAkB,EAAE,WAAoB;IAC9D,IAAI,OAAY,CAAC;IAEjB,IAAI,WAAW,EAAE;QACf,OAAO,GAAG,EAAC,CAAC,IAAI,CAAC,EAAE,WAAW,EAAC,CAAC;KACjC;SAAM;QACL,OAAO,GAAG,IAAI,CAAC;QACf,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC9B;KACF;IAED,OAAO,2BAAY,CAAC,CAAC,KAAsB,EAAE,IAAyB,EAAE,EAAE;QACxE,QAAQ,uBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;YACpC,KAAK,qBAAc,CAAC,KAAK,CAAC;YAC1B,KAAK,qBAAc,CAAC,IAAI;gBACtB,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/B,MAAM;YAER;gBACE,MAAM,IAAI,+BAAwB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACrD;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAvBD,0BAuBC","sourcesContent":["import {DecoratorParameters, DecoratorTypes, getDecoratorType, isObject, UnsupportedDecoratorType} from \"@tsed/core\";\nimport {JsonEntityStore} from \"../../domain/JsonEntityStore\";\nimport {JsonEntityFn} from \"./jsonEntityFn\";\n\n/**\n * Add a example metadata on the decorated element.\n *\n * @returns {(...args: any[]) => any}\n * @decorator\n * @decorator\n * @ajv\n * @jsonMapper\n * @swagger\n * @schema\n * @propertyDecorator\n * @paramDecorator\n * @methodDecorator\n * @model\n */\nexport function Example(examples: any): Function;\nexport function Example(name: string, description: string): Function;\nexport function Example(name: string | any, description?: string) {\n  let example: any;\n\n  if (description) {\n    example = {[name]: description};\n  } else {\n    example = name;\n    if (typeof name === \"string\") {\n      example = [].concat(example);\n    }\n  }\n\n  return JsonEntityFn((store: JsonEntityStore, args: DecoratorParameters) => {\n    switch (getDecoratorType(args, true)) {\n      case DecoratorTypes.CLASS:\n      case DecoratorTypes.PROP:\n        store.schema.examples(example);\n        break;\n\n      default:\n        throw new UnsupportedDecoratorType(Example, args);\n    }\n  });\n}\n"]}